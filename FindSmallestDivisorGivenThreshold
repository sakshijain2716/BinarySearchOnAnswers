class Solution {
public:
int check(vector<int>& nums, int t , int num)
{
    int sum = 0;
    for(int i = 0; i< nums.size() ;i++)
    {
        sum+= ceil(double(nums[i]) / double(num));
    }
    return sum;
}
    int smallestDivisor(vector<int>& nums, int t) {
        int n = nums.size() , ans = INT_MAX;
        int low = 1;
        int high = *max_element(nums.begin() , nums.end());

        while(low<=high)
        {
            int mid = low+(high-low)/2;
            int sum = check(nums , t ,mid);
            if(sum<=t)
            {
                ans = mid;
                high = mid-1;
            }
            else
            low = mid+1;
        }
        return ans;
    }
};
