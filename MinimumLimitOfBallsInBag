class Solution {
public:
    bool check(vector<int>& nums, int maxOp , int mxballs)
    {
        int op=0;
        for(int i=0 ; i<nums.size() ; i++)
        {
            if(nums[i]>mxballs)
            {
                int parts = ceil(double(nums[i])/double(mxballs));
                op+= parts-1;
            }  
        }
        if(op<=maxOp)
            return 1;
         return 0;
    }
    int minimumSize(vector<int>& nums, int maxOp) {
        int n = nums.size() , ans =0;
        int low = 1 , high = *max_element(nums.begin() , nums.end());
        while(low<=high)
        {
            int mid = low+(high-low)/2;
            int valid = check(nums , maxOp , mid);
            if(valid)
            {
                ans = mid;
                high = mid-1;
            }
            else
            low = mid+1;
        }
        return ans;
    }
};
